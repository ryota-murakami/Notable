name: E2E Tests with Coverage

on:
  push:
    branches: [main, feature/issue-279-e2e-coverage]
  pull_request:

jobs:
  e2e-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install

      - name: Build workspace dependencies
        run: pnpm build --filter=@notable/sync --filter=@notable/routing

      - name: Build Next.js app
        run: |
          cd packages/web
          pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: 'https://placeholder.supabase.co'
          NEXT_PUBLIC_SUPABASE_ANON_KEY: 'placeholder-anon-key'
          NEXT_PUBLIC_APP_URL: 'http://localhost:4378'
          NEXT_PUBLIC_API_MOCKING: 'enabled'

      - name: Install Playwright browsers
        run: |
          cd packages/web
          npx playwright install --with-deps chromium

      - name: Run E2E tests with coverage in batches
        env:
          CI: 'true'
          NODE_ENV: 'test'
          COVERAGE: '1'
          NEXT_PUBLIC_SUPABASE_URL: 'https://placeholder.supabase.co'
          NEXT_PUBLIC_SUPABASE_ANON_KEY: 'placeholder-anon-key'
          NEXT_PUBLIC_APP_URL: 'http://localhost:4378'
          NEXT_PUBLIC_API_MOCKING: 'enabled'
        run: |
          cd packages/web
          # Run tests in batches to avoid memory issues with large coverage files
          chmod +x scripts/run-e2e-coverage-batches.sh
          ./scripts/run-e2e-coverage-batches.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/web/coverage/lcov.info
          flags: e2e
          name: e2e-coverage
          fail_ci_if_error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/web/test-results/
          retention-days: 30

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: packages/web/coverage/
          retention-days: 30

      - name: Check coverage threshold
        run: |
          cd packages/web
          if [ -f coverage/lcov.info ]; then
            # Extract coverage percentage
            TOTAL_LINES=$(grep -E "^LF:" coverage/lcov.info | awk -F: '{sum += $2} END {print sum}')
            COVERED_LINES=$(grep -E "^LH:" coverage/lcov.info | awk -F: '{sum += $2} END {print sum}')
            
            if [ "$TOTAL_LINES" -gt 0 ]; then
              PERCENTAGE=$(awk "BEGIN {printf \"%.2f\", ($COVERED_LINES * 100) / $TOTAL_LINES}")
              echo "Current E2E coverage: $PERCENTAGE%"
              
              # Check if coverage meets 70% threshold (with 5% tolerance)
              if (( $(echo "$PERCENTAGE < 65" | bc -l) )); then
                echo "❌ E2E coverage is below minimum threshold"
                echo "Required: 70% (with 5% tolerance), Actual: $PERCENTAGE%"
                exit 1
              else
                echo "✅ E2E coverage meets threshold requirements"
              fi
            else
              echo "❌ No coverage data found"
              exit 1
            fi
          else
            echo "❌ Coverage report not found"
            exit 1
          fi
