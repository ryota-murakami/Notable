name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"

          # Optional: Allow Claude to run specific commands for Notable development
          allowed_tools: 'Bash(pnpm install),Bash(pnpm run build),Bash(pnpm run test),Bash(pnpm run lint),Bash(pnpm run typecheck),Bash(pnpm run e2e)'

          # Custom instructions for Notable project
          custom_instructions: |
            You are helping with Notable, a premium Notion clone built with Next.js, React, and TypeScript.

            Key guidelines:
            - Follow the coding standards in CLAUDE.md
            - Use pnpm as the package manager
            - Use shadcn/ui components and follow the Notable Design System
            - Never implement real-time collaboration features
            - Always include comprehensive tests without test.skip
            - Use production-grade implementations, no placeholders
            - Focus on creating a top-tier note-taking experience

            Tech stack:
            - Next.js 15 with React 19
            - TypeScript with strict mode
            - Tailwind CSS v4.1 for styling
            - Supabase for backend and auth
            - Plate.js for rich text editing
            - shadcn/ui for UI components

            Before making changes, always:
            1. Read the existing code to understand patterns
            2. Check package.json for available scripts
            3. Run tests to ensure nothing breaks
            4. Follow the plugin system architecture if extending functionality
