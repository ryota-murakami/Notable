{"version":3,"names":["_getJestObj","mock","Ionicons","_ref","name","size","color","props","_objectWithoutProperties2","default","_excluded","MockIcon","require","View","_jsxRuntime","jsx","Object","assign","testID","accessibilityLabel","_interopRequireDefault","_react","_EmptyState","_testUtils","_require","jest","describe","defaultProps","title","description","icon","it","_render","render","EmptyState","getByText","getByTestId","expect","toBeTruthy","_render2","_render3","_render4","_render5","titleText","style","toEqual","objectContaining","fontSize","fontWeight","marginTop","marginBottom","_render6","descriptionText","textAlign","_render7","getByLabelText"],"sources":["EmptyState.test.tsx"],"sourcesContent":["import React from 'react'\nimport { EmptyState } from '../../components/EmptyState'\nimport { render } from '../utils/test-utils'\n\n// Mock Expo vector icons\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: ({ name, size, color, ...props }: any) => {\n    const MockIcon = require('react-native').View\n    return (\n      <MockIcon \n        testID={`icon-${name}`}\n        accessibilityLabel={`${name} icon`}\n        {...props}\n      />\n    )\n  },\n}))\n\ndescribe('EmptyState', () => {\n  const defaultProps = {\n    title: 'No Notes Found',\n    description: 'Create your first note to get started',\n    icon: 'document-text-outline' as const,\n  }\n\n  it('renders correctly with all props', () => {\n    const { getByText, getByTestId } = render(\n      <EmptyState {...defaultProps} />\n    )\n\n    expect(getByText('No Notes Found')).toBeTruthy()\n    expect(getByText('Create your first note to get started')).toBeTruthy()\n    expect(getByTestId('icon-document-text-outline')).toBeTruthy()\n  })\n\n  it('renders with different icon', () => {\n    const props = {\n      ...defaultProps,\n      icon: 'search-outline' as const,\n    }\n\n    const { getByTestId } = render(\n      <EmptyState {...props} />\n    )\n\n    expect(getByTestId('icon-search-outline')).toBeTruthy()\n  })\n\n  it('renders with custom title and description', () => {\n    const props = {\n      title: 'Search Results Empty',\n      description: 'No notes match your search criteria',\n      icon: 'search-outline' as const,\n    }\n\n    const { getByText } = render(\n      <EmptyState {...props} />\n    )\n\n    expect(getByText('Search Results Empty')).toBeTruthy()\n    expect(getByText('No notes match your search criteria')).toBeTruthy()\n  })\n\n  it('handles long text content', () => {\n    const props = {\n      title: 'This is a very long title that might wrap to multiple lines',\n      description: 'This is a very long description that provides detailed information about the current state and what the user can do to resolve it. It should handle text wrapping gracefully.',\n      icon: 'information-circle-outline' as const,\n    }\n\n    const { getByText } = render(\n      <EmptyState {...props} />\n    )\n\n    expect(getByText(props.title)).toBeTruthy()\n    expect(getByText(props.description)).toBeTruthy()\n  })\n\n  it('applies correct styles to title', () => {\n    const { getByText } = render(\n      <EmptyState {...defaultProps} />\n    )\n\n    const titleText = getByText(defaultProps.title)\n    expect(titleText.props.style).toEqual(\n      expect.objectContaining({\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginTop: 16,\n        marginBottom: 8,\n      })\n    )\n  })\n\n  it('applies correct styles to description', () => {\n    const { getByText } = render(\n      <EmptyState {...defaultProps} />\n    )\n\n    const descriptionText = getByText(defaultProps.description)\n    expect(descriptionText.props.style).toEqual(\n      expect.objectContaining({\n        fontSize: 16,\n        textAlign: 'center',\n      })\n    )\n  })\n\n  it('renders icon with correct accessibility label', () => {\n    const { getByLabelText } = render(\n      <EmptyState {...defaultProps} />\n    )\n\n    expect(getByLabelText('document-text-outline icon')).toBeTruthy()\n  })\n})"],"mappings":"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","ignoreList":[]}